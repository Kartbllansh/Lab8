package com.example.lab8.Languagesss;

import java.util.ListResourceBundle;

public class StatsBundle_be_swe extends ListResourceBundle {
    @Override
    public Object[][] getContents() {
        return contents;
    }
    private final Object[][] contents = {
            //{ "LOG IN", "Дапамога" },
            //{ "SIGN UP", "Інфармацыя" },
            { "Username", "Användarnamn" },
            { "Password", "Lösenord" },
            { "Languages", "Språkval" },
            { "SIGN IN", "Logga in" },
            { "Info", "Info" },
            { "Clear", "Rensa" },
            { "Help", "Hjälp" },
            { "Remove", "Ta bort" },
            { "Add", "Lägg till" },
            { "Print", "Skriv ut" },
            { "LogOut", "Logga ut" },
            { "Save", "Spara" },
            { "Exit", "Avsluta" },
            { "Map", "Karta" },
            { "fieldInfo", "Fält för information" },
            { "name", "namn" },
            { "id", "id" },
            { "x", "x" },
            { "y", "y" },
            {"color", "Färg"},
            {"weight", "Vikt"},
            { "age", "Ålder" },
            { "type", "Typ" },
            { "size", "Storlek" },
            { "eyes", "Ögon" },
            { "tooth", "Tänder" },
            { "data", "Datum" },
            { "addh", "add: Kommando för att lägga till en ny post i samlingen" },
            { "helph", "help: Kommando för att visa hjälp om tillgängliga kommandon" },
            { "exith", "exit: Kommando för att avsluta programmet" },
            { "logouth", "logout: Kommando för att logga ut" },
            { "print_ageh", "print_age: Kommando för att skriva ut värdena av åldersfältet för alla poster i stigande ordning" },
            { "add_if_minh", "add_if_min: Kommando för att lägga till en ny post i samlingen om dess värde är mindre än det minsta värdet i samlingen" },
            { "clearh", "clear: Kommando för att rensa samlingen" },
            { "print_typeh", "print_type: Kommando för att skriva ut värdena av typfältet för alla poster i fallande ordning" },
            { "infoh", "info: Kommando för att visa information om samlingen i standardutdata" },
            { "update_idh", "update_id: Kommando för att uppdatera värdet för en post i samlingen med en viss id"},
            {"remove_by_idh", "remove_by_id: Tar bort en post från samlingen baserat på dess id"},
            //{"remove_by_indexh", "radera poster efter index"},
            {"remove_greaterh", "remove_greater: Kommando för att ta bort alla poster från samlingen som är större än en given post. Fungerar baserat på storleksfältet"},
            {"remove_by_typeh", "remove_by_type: Kommando för att ta bort en post från samlingen där värdet av typfältet är lika med det angivna värdet"},
            {"removeIdB", "Ta bort efter ID"},
            {"RemoveTypeB", "Ta bort efter typ"},
            {"remomeGreatB", "Ta bort större"},
            {"fieldId", "Fält för att ange ID"},


            {"fieldType", "Fält för att ange typ"},
            {"fieldSize", "Fält för att ange storlek"},
            {"nameA", "Namn"},
            {"ageA", "Ålder"},
            {"weightA", "Vikt"},
            {"colorA", "Färg"},
            {"typeA", "Typ"},
            {"toothA", "Tänder"},
            {"eyesA", "Ögon"},
            {"sizeA", "Storlek"},
            {"addA", "Lägg till"},
            {"addminA", "Lägg till om minst"},
            {"updateIdA", "Uppdatera efter ID"},
            {"fieldIdA", "Ange ID"},
            {"notPasswd", "Ange lösenorden matchar inte"},
            {"LoginErr", "Fel vid inloggning"},
            {"error", "Fel"},
            {"wrongPasswd", "Fel lösenord. Försök kvar: "},
            {"isColl", "Samlingen är tom, kommandot har ingen effekt"},
            {"notDelete", "Ingen drake har tagits bort"},
            {"notUser", "Objektet tillhör en annan användare"},
            {"notExistId", "Det angivna ID:t existerar inte"},
            {"changeObj", "Objektet har ändrats"},
            {"addMin", "Värdet för det minsta elementet i samlingen är mindre"},
            {"not1delete", "Ingen drake har tagits bort"},
            {"notAcc", "Inget konto finns med det användarnamnet"},
            {"yetExist", "Ett konto finns redan med användarnamnet"},
            {"succReg", "Kontoregistret lyckades"},
            {"errArg", "Fel med argumentet"},
            {"argForm", "Argumentformatet matchar inte"},
            {"notExistType", "Det finns ingen sådan typ"},
            {"needNumber", "Du måste ange ett nummer för att kommandot ska fungera"},
            {"argComm", "Inga argument angivna för kommandot"},
            {"necorrName", "Ogiltigt angivet värde"}
    };
}


